version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: bot_app
    container_name: bot_app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: postgres_bot
    environment:
      - .env
    ports:
      - "5050:5432"
    volumes:
      - ./docker/db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: bot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "raw", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
networks:
  app-network:
    driver: bridge